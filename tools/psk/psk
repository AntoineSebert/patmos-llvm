#!/bin/bash
#
# ruby-runner

# Set library path (adapt for installation)
LIBDIR= #(LIBDIR)

list_commands() {
    for driver in $(ls "${LIBDIR}"/psk-*.rb) ; do
	naked=$(basename "${driver}" .rb)
	echo ${naked/psk-/}
    done
}

detect_ruby() {
    RUBY19s="ruby1.9 ruby1.9.1 ruby1.9.2 ruby1.9.3"
    RUBY_VERSION=`ruby -e 'puts RUBY_VERSION'`

    if [[ "${RUBY_VERSION}" =~ ^1.8 ]] ; then
	RUBY=ruby
	RUBY18=ruby
    elif [[ "${RUBY_VERSION}" =~ ^1.9 ]] ; then
	RUBY=ruby
	RUBY19=ruby
    elif [ ! -z "${RUBY_VERSION}" ] ; then
	RUBY=ruby
    fi
    if [ -z "${RUBY19}" ] ; then
	for r19 in ${RUBY19s} ; do
	    if [ ! -z "`which ${r19}`" ] ; then
		RUBY=${r19}
		RUBY19=${r19}
		break
	    fi
	done
    fi
    if [ -z "${RUBY}" ] ; then
	echo "ruby not found. Please install ruby (e.g., sudo aptitude install ruby1.9.1)" >&2
	exit 1
    elif [ -z "${RUBY19}" ] ; then
	echo "ruby1.9 not found. Falling back to unsupported ruby version `${RUBY} -v`"
    fi
}

detect_ruby

# Set LIBDIR fallback
if [ -z "${LIBDIR}" ] ; then LIBDIR=$(dirname $0)/lib ;  fi

# Select command
COMMAND=$1
shift
if [ -z "${COMMAND}" ] ; then
    echo "Usage: psk command args.." >&2
    COMMANDS=$(list_commands)
    echo " commands: $(echo ${COMMANDS})" >&2
    exit 1
fi
# Run command
${RUBY} -I ${LIBDIR} ${LIBDIR}/psk-"${COMMAND}".rb "${@}"
