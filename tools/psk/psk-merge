#!/usr/bin/env ruby
#
# Merges a stream of YAML documents into one document (if version
# and architecture are compatible)
#
# TODO: port to python or C++ (to reduce number of languages)

require 'ostruct'
require 'optparse'
require 'yaml'

# Standard option parser
options = OpenStruct.new
parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} -o merged.pml [file.pml...]"
  opts.on("-o", "--output FILE", "Output File") { |f| options.output = f }
  opts.on_tail("-h", "--help", "Show this message") { $stderr.puts opts; exit 0 }
end.parse!

# input/output
infiles = if ARGV[0].nil?
          then [ $< ]
          else ARGV.map { |arg| File.new(arg) }
          end
outfile = if ! options.output || options.output == "-"
          then $>
          else File.new(options.output,"w")
          end

# merge
doc,data = {},[]
infiles.each do |f|
  data.concat(YAML::load_stream(f.read))
end
data.each do |dat|
  dat.each do |k,v|
    if(v.kind_of? Array)
      (doc[k]||=[]).concat(v)
    elsif(! doc[k])
      doc[k] = dat[k]
    elsif(doc[k] != dat[k])
      raise Exception.new("psk-merge: mismatch in non-list attribute #{k}: #{doc[k]} and #{dat[k]}")
    end
  end
end
outfile.puts YAML::dump(doc)
outfile.close
