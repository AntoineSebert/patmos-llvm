#!/usr/bin/env ruby
#
SYNOPSIS=<<EOF if __FILE__ == $0
Merges a stream of YAML documents into one document (if version
and architecture are compatible)
EOF

require File.join(File.dirname(__FILE__),"utils.rb")
include PMLUtils

class MergeTool
  def MergeTool.run(files)
    stream = []
    files.each do |f|
      data = if f.kind_of?(String) 
               File.open(f) { |fh| YAML::load_stream(fh) }        
             else
               YAML::load_stream(f)
             end
      data = data.documents if data.respond_to?(:documents) # ruby 1.8 compat
      stream.concat(data)
    end
    PML.new(stream)
  end
  def MergeTool.main
    options, args = PML::optparse(nil, "[file.pml..]", SYNOPSIS, :type => :output)
    MergeTool.run(args).dump_to_file(options.output)
  end
end

MergeTool.main if __FILE__ == $0
